{"version":3,"sources":["reducers/index.js","store.js","services/service.js","actions/index.js","components/header/index.js","components/header/header.js","components/card/index.js","components/card/card.js","components/creater-btn/btn-create-new-el.js","components/creater-btn/index.js","components/input-title/index.js","components/input-title/input-title.js","components/boards/boards.js","components/boards/index.js","components/task/index.js","components/task/task.js","components/note/note.js","components/board-item/board-item.js","components/board-item/index.js","App.js","index.js"],"names":["initialState","boardsCollection","activeBoardData","notesList","activeNoteList","task","activeBoard","isAddNewEl","reducer","state","actions","type","payload","idx","findIndex","e","name","parentName","slice","store","createStore","composeWithDevTools","applyMiddleware","thunk","Service","boards","getAllBoards","parseLocalStore","map","title","id","cleanAll","localStorage","clear","getDataBoard","find","addBoard","el","newBord","setItem","JSON","stringify","addNote","push","addTask","nameBoard","findBoard","this","data","getItem","parse","arr","service","boardsLoaded","dataBoardLoaded","setActiveBoard","addNewBoard","newBoard","Date","now","toString","addNewNote","newNote","showInputForTitle","Header","className","style","height","to","fontFamily","Card","textTransform","BtnCreateNewElement","boxShadow","borderRadius","justifyContent","props","color","onClick","showInputTitle","Component","InputTitle","setTitle","width","onKeyDown","key","target","value","placeholder","BoardsList","board","BoardsListContainer","trim","length","inputTitle","Boards","connect","dispatch","bindActionCreators","Task","borderTopRightRadius","borderBottomLeftRadius","addNewTask","newTask","text","setActiveNoteList","taskList","BoardItem","addNewList","match","params","history","note","withRouter","App","Fragment","position","top","left","cleanLocalStorage","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5c1d0cfe.chunk.js","sourcesContent":["const initialState = {\r\n    boardsCollection: [],\r\n    activeBoardData:{\r\n        notesList: []\r\n    },\r\n    activeNoteList:{\r\n        task:[]\r\n    },\r\n    activeBoard:null,\r\n    isAddNewEl:false\r\n}\r\n\r\nconst reducer = ( state = initialState, actions) => {\r\n\r\n    switch ( actions.type ){\r\n\r\n        case 'BOARDS_LOADED':\r\n            return {\r\n                ...state,\r\n                boardsCollection: actions.payload\r\n            };\r\n\r\n        case 'SET_ACTIVE_BOARD':\r\n            return {\r\n                ...state,\r\n                activeBoard: actions.payload\r\n            };\r\n\r\n        case 'SET_ACTIVE_NOTE_LIST':\r\n            return {\r\n                ...state,\r\n                activeNoteList: actions.payload\r\n            };\r\n\r\n        case 'ADD_NEW_BOARD':\r\n            return {\r\n                ...state,\r\n                isAddNewEl: false,\r\n                boardsCollection:[\r\n                    ...state.boardsCollection,\r\n                    actions.payload\r\n                ]\r\n            }\r\n\r\n        case 'ADD_NEW_NOTE':\r\n            return {\r\n                ...state,\r\n                isAddNewEl: false,\r\n                activeBoardData: {\r\n                    ...state.activeBoardData,\r\n                    notesList: [\r\n                        ...state.activeBoardData.notesList,\r\n                        actions.payload\r\n                    ]\r\n                }\r\n            }\r\n\r\n        case 'ADD_NEW_TASK':\r\n            const idx = state.activeBoardData.notesList.findIndex( e=> e.name == actions.payload.parentName );\r\n            return {\r\n                ...state,\r\n                activeBoardData: {\r\n                    ...state.activeBoardData,\r\n                    notesList: [\r\n                        ...state.activeBoardData.notesList.slice(0,idx),\r\n                        {...state.activeNoteList,\r\n                            task:[...state.activeNoteList.task,actions.payload]\r\n                        },\r\n                        ...state.activeBoardData.notesList.slice(idx+1)\r\n                    ]\r\n                },\r\n                activeNoteList:{\r\n                    ...state.activeNoteList,\r\n                    task:[\r\n                        ...state.activeNoteList.task,\r\n                        actions.payload\r\n                    ]\r\n                }\r\n            }\r\n\r\n        case 'IS_CREATE_ELEMENT':\r\n            return {\r\n                ...state,\r\n                isAddNewEl: !state.isAddNewEl\r\n            }\r\n\r\n        case 'DATA_BOARD_LOADED':\r\n            return {\r\n                ...state,\r\n                activeBoardData: actions.payload\r\n            }\r\n\r\n        case 'CLEAN_ALL':\r\n            return {\r\n                ...initialState\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default reducer;","import { createStore, applyMiddleware } from 'redux';\r\nimport reducer from './reducers';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware( thunk )));\r\n\r\nexport default store;","class Service {\r\n    boards = []\r\n\r\n    initialLocalStorage(){\r\n        localStorage.setItem( 'boards', JSON.stringify( this.boards ) );\r\n    }\r\n\r\n    parseLocalStore(){\r\n        const data = localStorage.getItem('boards' );\r\n        return  JSON.parse( data );\r\n    }\r\n\r\n    findBoard( arr, title ){\r\n        return arr.find( e => e.title == title );\r\n    }\r\n\r\n    getAllBoards = () => {\r\n        const boards = this.parseLocalStore();\r\n        let boardsCollection = [];\r\n        if( boards ) {\r\n            boardsCollection = boards.map( e => {\r\n                return { title:e.title, id: e.id }\r\n            } );\r\n        }\r\n\r\n        return boardsCollection\r\n    }\r\n\r\n    cleanAll = () => {\r\n        localStorage.clear();\r\n    }\r\n\r\n    getDataBoard = ( title )=> {\r\n        const boards = this.parseLocalStore();\r\n        const boardData = boards.find( (e) => e.title == title );\r\n        return boardData\r\n    }\r\n\r\n    addBoard = ( el ) => {\r\n        const boards = this.parseLocalStore();\r\n\r\n        let newBord = boards ?  [...boards, el ] : [el]\r\n        localStorage.setItem( 'boards', JSON.stringify( newBord ));\r\n    }\r\n\r\n    addNote = ( el, parentName ) => {\r\n        const boards = this.parseLocalStore();\r\n        boards.find( (e) => e.title == parentName ).notesList.push( el );\r\n        localStorage.setItem( 'boards', JSON.stringify( boards ) );\r\n    }\r\n\r\n    addTask = ( el, parentName, nameBoard ) => {\r\n       const boards = this.parseLocalStore();\r\n       const itemBoard = this.findBoard( boards, nameBoard );\r\n       const note = itemBoard.notesList.find( (e) => e.name == parentName );\r\n       note.task.push( el );\r\n       localStorage.setItem( 'boards', JSON.stringify( boards ) );\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Service;\r\n","import Service from '../services/service';\r\n\r\nconst service = new Service();\r\n\r\nconst boardsLoaded = ( boards )=> {\r\n    return {\r\n        type: 'BOARDS_LOADED',\r\n        payload: boards\r\n    };\r\n};\r\n\r\nconst dataBoardLoaded = ( activeBoard )=> {\r\n    return {\r\n        type: 'DATA_BOARD_LOADED',\r\n        payload: activeBoard\r\n    };\r\n};\r\n\r\nconst setActiveBoard = ( activeBoard )=> {\r\n    return {\r\n        type: 'SET_ACTIVE_BOARD',\r\n        payload: activeBoard\r\n    };\r\n};\r\n\r\nconst setActiveNoteList = ( activeNoteList )=> {\r\n    return {\r\n        type: 'SET_ACTIVE_NOTE_LIST',\r\n        payload: activeNoteList\r\n    };\r\n};\r\n\r\nconst addNewBoard = ( title )  => {\r\n    const newBoard = { title:title, id:Date.now().toString(), notesList:[] };\r\n    service.addBoard( newBoard );\r\n    return {\r\n        type: 'ADD_NEW_BOARD',\r\n        payload: newBoard\r\n    }\r\n}\r\n\r\nconst addNewNote = ( title, parentName )  => {\r\n    const newNote = { name:title, id:Date.now().toString(), parentName:parentName, task:[] };\r\n    service.addNote( newNote, parentName );\r\n    return {\r\n        type: 'ADD_NEW_NOTE',\r\n        payload: newNote\r\n    }\r\n}\r\nconst addNewTask = ( title, parentName, nameBoard )  => {\r\n    const newTask = { text:title, id:Date.now().toString(), parentName:parentName };\r\n    service.addTask( newTask, parentName, nameBoard );\r\n    return {\r\n        type: 'ADD_NEW_TASK',\r\n        payload: newTask\r\n    }\r\n}\r\n\r\nconst showInputForTitle = () => {\r\n    return{\r\n        type: 'IS_CREATE_ELEMENT'\r\n    }\r\n}\r\n\r\nconst cleanAll = () => {\r\n    return{\r\n        type: 'CLEAN_ALL'\r\n    }\r\n}\r\n\r\nexport {\r\n    boardsLoaded,\r\n    setActiveBoard,\r\n    addNewBoard,\r\n    showInputForTitle,\r\n    dataBoardLoaded,\r\n    addNewNote,\r\n    addNewTask,\r\n    setActiveNoteList,\r\n    cleanAll\r\n};","import Header from './header';\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = () => {\r\n    return(\r\n\r\n        <div className=\"container valign-wrapper\" style={{height: '20vh'}}>\r\n            <div className=\"m-auto\">\r\n                <Link to=\"/\"><h1 style={{fontFamily: 'Modak'}}>\"trello\"</h1></Link>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Header;","import Card from './card';\r\n\r\nexport default Card;","import React from 'react';\r\n\r\nconst Card = ( {title} ) => {\r\n\r\n    return (\r\n        <div className=\"m-auto\" >\r\n            <h6 className=\"center white-text text-darken-1\" style={ {textTransform:'uppercase'} }>{ title }</h6>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass BtnCreateNewElement extends Component {\r\n\r\n    render() {\r\n\r\n        const style = {\r\n            height: '100px',\r\n            boxShadow: 'inset 0 0 7px #000000',\r\n            borderRadius: '2px',\r\n            justifyContent: 'center',\r\n        }\r\n\r\n        return(\r\n            <div className=\"valign-wrapper white\" style={style}>\r\n                <Link to='#' className={\"btn \"+this.props.color}\r\n                        onClick={this.props.showInputTitle}>\r\n                    <i className=\"material-icons\">add</i>{ !this.props.isAddNewEl ? this.props.title : 'cancel'}\r\n                </Link>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BtnCreateNewElement;","import BtnCreateNewElement from './btn-create-new-el';\r\n\r\nexport default BtnCreateNewElement;","import InputTitle from \"./input-title\";\r\n\r\nexport default InputTitle;","import React from \"react\";\r\n\r\nconst InputTitle = ( {setTitle} )=> {\r\n    const inputValue = (e)=> {\r\n\r\n        if (e.key == 'Enter') {\r\n            setTitle(e.target.value);\r\n            e.target.value = '';\r\n        }\r\n    }\r\n    return(\r\n        <span className=\"mx-2\" style={{width:'100%'}}>\r\n            <input  type=\"text\" onKeyDown={ inputValue} placeholder=\"name\" />\r\n        </span>\r\n    )\r\n}\r\n\r\nexport  default InputTitle;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators} from \"redux\";\r\n\r\nimport Service from '../../services/service';\r\nimport { boardsLoaded, addNewBoard, showInputForTitle } from '../../actions';\r\nimport Card from '../card';\r\nimport BtnCreateNewElement from \"../creater-btn\";\r\nimport InputTitle from \"../input-title\";\r\nimport './boards.css';\r\n\r\nconst BoardsList = ( {boards} ) => {\r\n    return boards.map( (board) => {\r\n        return (\r\n            <div className=\"col s3 mb-2\" key={ board.id } >\r\n                <Link to={`board/${board.id}`} >\r\n                    <div className=\"board teal lighten-2 valign-wrapper\" >\r\n                        <Card title={ board.title } />\r\n                    </div>\r\n                </Link>\r\n            </div>\r\n        )\r\n    })\r\n}\r\n\r\nclass BoardsListContainer extends Component {\r\n\r\n    service = new Service();\r\n\r\n    componentDidMount(){\r\n\r\n        if( !this.props.boardsCollection.length ){\r\n            const boards = this.service.getAllBoards();\r\n            this.props.boardsLoaded( boards );\r\n        }\r\n    }\r\n\r\n    showInputTitle = () => {\r\n        this.props.showInputForTitle( );\r\n    }\r\n\r\n    addNewBoard = ( title )=> {\r\n        if ( title.trim() != '') {\r\n            this.props.addNewBoard( title );\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const { boardsCollection, isAddNewEl } = this.props;\r\n\r\n        const inputTitle =  ( <div className=\"col s3 mb-2\">\r\n                                <div className=\"board valign-wrapper\">\r\n                                    <InputTitle setTitle={ this.addNewBoard } />\r\n                                </div>\r\n                            </div> )\r\n\r\n\r\n        return (\r\n            <div className=\"container\" style={ {height: '80vh'} } >\r\n                <div className=\"row\">\r\n                    <div className=\"col s3\">\r\n                        <BtnCreateNewElement title={ 'new board' }\r\n                                             showInputTitle={ this.showInputTitle }\r\n                                             isAddNewEl={ isAddNewEl } />\r\n                    </div>\r\n                    <BoardsList boards={ boardsCollection } />\r\n                    { isAddNewEl && inputTitle }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst  mapStateToProps = ( { boardsCollection, isAddNewEl } ) => {\r\n    return { boardsCollection, isAddNewEl };\r\n}\r\n\r\nconst mapDispatchToProps = ( dispatch ) => {\r\n    return bindActionCreators({\r\n        boardsLoaded,\r\n        addNewBoard,\r\n        showInputForTitle\r\n    }, dispatch )\r\n}\r\n\r\nexport default connect( mapStateToProps, mapDispatchToProps )( BoardsListContainer );\r\n","import Boards from './boards';\r\n\r\nexport default Boards;","import Task from './task';\r\n\r\nexport  default  Task;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Task = ({task})=> {\r\n\r\n    const style ={\r\n        borderTopRightRadius:'15px',\r\n        borderBottomLeftRadius: '15px'\r\n    }\r\n    return(\r\n        <Link to={'#'} className=\"collection-item z-depth-1 my-1\" style={ style } >{task}</Link>\r\n    )\r\n}\r\n\r\nexport default Task;","import React from \"react\";\r\nimport Task from \"../task\";\r\nimport {connect } from \"react-redux\";\r\nimport { addNewTask, setActiveNoteList } from \"../../actions\";\r\n\r\nconst Note = ({ data, addNewTask, setActiveNoteList })=> {\r\n\r\n    const taskList = data.task.map( (task) => <Task task={ task.text } key={ task.id } />);\r\n\r\n    const inputValue = (e) => {\r\n\r\n        if (e.key == 'Enter') {\r\n            if ( e.target.value.trim() != '') {\r\n                addNewTask( e.target.value, data.name, data.parentName );\r\n                e.target.value = '';\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    const activeNoteList = () => {\r\n        setActiveNoteList( data );\r\n    }\r\n\r\n    return (\r\n        <div className=\"col s12 m4\"\r\n             onClick={ activeNoteList }>\r\n            <div className=\"collection card-panel \">\r\n                <h5 className=\"center collection-item blue-grey-text darken-4\"\r\n                    style={ {fontFamily: 'Modak'} } >{ data.name }</h5>\r\n                <input type=\"text\" className=\" z-depth-4\" placeholder=\"task \"\r\n                       onKeyDown={ inputValue }/>\r\n                { taskList }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect( null, { addNewTask, setActiveNoteList })( Note );","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nimport Service from '../../services/service'\r\nimport { setActiveBoard, boardsLoaded, dataBoardLoaded, showInputForTitle, addNewNote } from '../../actions';\r\n\r\nimport Spinner from '../spiner';\r\nimport BtnCreateNewElement from \"../creater-btn/btn-create-new-el\";\r\nimport Note from \"../note/note\";\r\nimport InputTitle from \"../input-title\";\r\n\r\nclass BoardItem extends Component {\r\n\r\n    service = new Service();\r\n\r\n    componentDidMount() {\r\n        const { match, setActiveBoard, dataBoardLoaded } = this.props;\r\n\r\n        const boards = this.service.getAllBoards();\r\n        const activeBoard = boards.find((e) => e.id == match.params.id);\r\n\r\n        if ( !activeBoard) {\r\n            this.props.history.push('/');\r\n        } else {\r\n            setActiveBoard( activeBoard );\r\n            const dataItemBoard = this.service.getDataBoard( activeBoard.title );\r\n            dataBoardLoaded( dataItemBoard );\r\n        }\r\n\r\n    }\r\n\r\n    showInputTitle = () => {\r\n        this.props.showInputForTitle( );\r\n    }\r\n\r\n    addNewList = ( title ) => {\r\n        if ( title.trim() != '') {\r\n            this.props.addNewNote( title, this.props.activeBoard.title );\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        const { activeBoardData, activeBoard, isAddNewEl } = this.props;\r\n\r\n        const notesList = activeBoardData.notesList.map( (note) => {\r\n            return <Note data={ note } key={ note.id } />\r\n        })\r\n\r\n        const inputTitle = ( <div className=\"col s12 m3\">\r\n                                <div className=\"collection card-panel \">\r\n                                    <InputTitle setTitle={ this.addNewList }/>\r\n                                </div>\r\n                            </div> )\r\n\r\n\r\n    return(\r\n        <div className=\"container teal\" style={ {height: '80vh'} } >\r\n            <div className=\"row\">\r\n                <div className=\"col s3 mt-2 push-s9\">\r\n                    <BtnCreateNewElement title={'new list'}\r\n                                         showInputTitle={ this.showInputTitle }\r\n                                         isAddNewEl={ isAddNewEl } />\r\n                </div>\r\n                <div className=\"col s9 center pull-s3\" >\r\n                    <h3 className=\"white py-2 grey-text text-darken-1 mt-2\"\r\n                        style={ {height: '100px',textTransform:'uppercase'} } >\r\n                        { activeBoard && activeBoard.title }\r\n                    </h3>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                { activeBoardData.notesList && notesList }\r\n                { isAddNewEl && inputTitle }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n}\r\n\r\nconst mapStateToProps = ( { activeBoard, boardsCollection, activeBoardData, isAddNewEl } ) => {\r\n    return { activeBoard, boardsCollection, activeBoardData, isAddNewEl }\r\n}\r\n\r\nconst mapDispatchToProps = ( dispatch ) => {\r\n    return bindActionCreators({\r\n        setActiveBoard,\r\n        boardsLoaded,\r\n        dataBoardLoaded,\r\n        showInputForTitle,\r\n        addNewNote\r\n    }, dispatch )\r\n}\r\n\r\nexport default connect( mapStateToProps, mapDispatchToProps )( withRouter( BoardItem ) );","import BoardItem from './board-item';\r\n\r\nexport default BoardItem;","import React, { Component } from 'react';\nimport { Switch, Route, Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { cleanAll } from './actions';\nimport Header from './components/header';\nimport BoardsListContainer from './components/boards';\nimport BoardItem from './components/board-item';\n\nimport Service from './services/service';\n\n\nclass App extends Component {\n\nservice = new Service();\n\ncleanLocalStorage() {\n    // this.service.initialLocalStorage();\n    this.service.cleanAll();\n    this.props.cleanAll();\n\n}\n  render(){\n    \n    return (\n        <React.Fragment>\n            <Link to='my-easy-trello/' className=\"waves-effect waves-light btn\"\n                  style={{position: 'absolute', top: 0, left: 0}}\n                  onClick={ () => this.cleanLocalStorage() }>clean all\n            </Link>\n            <div className=\"App\">\n                <Header/>\n\n                <Switch>\n                    <Route path=\"/\" exact component={ BoardsListContainer } />\n                    <Route path=\"board/:id\" component={ BoardItem } />\n                    <Redirect to='/' />\n                </Switch>\n            </div>\n        </React.Fragment>\n    );\n  }\n}\n\nexport default connect( null, { cleanAll } )(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport store from './store';\nimport App from './App';\nimport './index.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store} >\n        <Router>\n          <App />\n        </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}